version: 2.1

orbs:
  python: circleci/python@1.3
  azure-cli: circleci/azure-cli@1.1.0

jobs:
  unit:
    docker: &msodbc_py
      - image: &docker_image dbtmsft/msodbc_py:0.5
    steps:
      - checkout
      - python/install-packages:
                pkg-manager: pip
                pip-dependency-file: dev_requirements.txt
      - run: tox -- -v test/unit
  integration-sqlserver: &sqlserver
    docker: &msodbc_py_&_sqlserver
      - image: *docker_image
      - image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
          ACCEPT_EULA: 'yes'
          MSSQL_SA_PASSWORD: 5atyaNadella
          MSSQL_IP_ADDRESS: 0.0.0.0
    steps:
      - checkout
      - python/install-packages:
                pkg-manager: pip
                pip-dependency-file: dev_requirements.txt
      - run:
          name: wait for SQL Server container to set up
          command: sleep 30
      - run:
          name: test connection via SQL CMD
          command: sqlcmd -S 'localhost,1433' -U sa -P 5atyaNadella -Q 'create database blog'
      - run:
          name: Test adapter on SQL Server against dbt-adapter-tests
          command: tox -- -v test/integration/sqlserver.dbtspec
  connection-sqlserver:
    <<: *sqlserver
    steps:
      - checkout
      - run: &install-dbt-sqlserver
          name: "install dbt-sqlserver"
          command: pip install .
      - run:
          name: wait for SQL Server container to set up
          command: sleep 30
      - run: &prep=connect
          name: prep for connecting
          command: |
            mkdir -p ~/.dbt
            cp test/integration/sample.profiles.yml ~/.dbt/profiles.yml
      - run:
          name: cnxn -- SQL Server - local sql cred
          command: |
            cd test/integration
            dbt compile --target sqlserver_local_userpass
      - run:
          name: cnxn -- SQL Server - local sql cred encrypt
          command: |
            cd test/integration
            dbt compile --target sqlserver_local_encrypt

  integration-azuresql:
    docker: *msodbc_py
    steps:
      - checkout
      - python/install-packages:
                pkg-manager: pip
                pip-dependency-file: dev_requirements.txt
      - run:
          name: Test adapter on Azure SQL against dbt-adapter-tests
          command: tox -- -v test/integration/azuresql.dbtspec
  connection-azuresql:
    docker: *msodbc_py
    steps:
      - checkout
      - run: *install-dbt-sqlserver
      - azure-cli/install
      - run: *prep=connect
      - run:
          name: wake up server
          command: |
            cd test/integration
            dbt debug --target azuresql_sqlcred
      - run:
          name: cnxn -- Azure SQL - SQL CRED user+pass
          command: |
            cd test/integration
            dbt compile --target azuresql_sqlcred
      - azure-cli/login-with-user:
          azure-username: DBT_AZURE_USERNAME
          azure-password: DBT_AZURE_PASSWORD
          alternate-tenant: true
          azure-tenant: DBT_AZURE_TENANT
      - run:
          name: cnxn -- Azure SQL - AZ CLI User
          command: |
            cd test/integration
            dbt compile --target azuresql_azcli
      - azure-cli/login-with-service-principal:
          azure-sp: DBT_AZURE_SP_NAME
          azure-sp-password: DBT_AZURE_SP_SECRET
          azure-sp-tenant: DBT_AZURE_TENANT
      - run:
          name: cnxn -- Azure SQL - AZ CLI ServicePrincipal
          command: |
            cd test/integration
            dbt compile --target azuresql_azcli

workflows:
  main:
    jobs:
      - unit
      - connection-azuresql: &profile
          context:
            - DBT_SYNAPSE_PROFILE
      - connection-sqlserver: *profile
      - integration-sqlserver: *profile
      - integration-azuresql:
          <<: *profile
          requires:
            - connection-azuresql
